#! /bin/bash
#
# JBoss Control Script
#
# To use this script run it as root - it will switch to the specified user
#
# Here is a little (and extremely primitive) startup/shutdown script
# for RedHat systems. It assumes that JBoss lives in /usr/local/jboss,
# it's run by user 'jboss' and JDK binaries are in /usr/local/jdk/bin.
# All this can be changed in the script itself. 
#
# Either modify this script for your requirements or just ensure that
# the following variables are set correctly before calling the script.

# Init script modified for Ubuntu Server 8.04 by
# Chiral Software, Inc.

# To install make symlink in /etc/init.d and sudo update-rc.d jboss defaults

# source local environment
SCRIPT_DIR="$(dirname "$(readlink -f ${BASH_SOURCE[0]})")"

export WILDFLY_HOME=$SCRIPT_DIR/wildfly-8.2.0.Final

#define the user under which jboss will run, or use 'RUNASIS' to run as the current user
WILDFLY_USER=${WILDFLY_USER:-"enav"}

#server config file
SERVER_CONFIG="standalone.xml"

#define the script to use to start jboss
WILDFLYSH=${WILDFLYSH:-"$WILDFLY_HOME/bin/standalone.sh -b=0.0.0.0 -bmanagement=0.0.0.0 --server-config $SERVER_CONFIG"}

#define the script to use to stop jboss
WILDFLYSTOP="$WILDFLY_HOME/bin/jboss-cli.sh --connect command=:shutdown"

if [ "$WILDFLY_USER" = "$USER" ]; then
  SUBIT=""
else
  SUBIT="su - $WILDFLY_USER -c "
fi

if [ -n "$WILDFLY_CONSOLE" -a ! -d "$WILDFLY_CONSOLE" ]; then
  # ensure the file exists
  touch $WILDFLY_CONSOLE
  if [ ! -z "$SUBIT" ]; then
    chown $WILDFLY_USER $WILDFLY_CONSOLE
  fi 
fi

if [ -n "$WILDFLY_CONSOLE" -a ! -f "$WILDFLY_CONSOLE" ]; then
  echo "WARNING: location for saving console log invalid: $WILDFLY_CONSOLE"
  echo "WARNING: ignoring it and using /dev/null"
  WILDFLY_CONSOLE="/dev/null"
fi

#define what will be done with the console log
WILDFLY_CONSOLE=${WILDFLY_CONSOLE:-"/dev/null"}

WILDFLY_CMD_START="cd $WILDFLY_HOME/bin; $WILDFLYSH"

if [ ! -d "$WILDFLY_HOME" ]; then
  echo WILDFLY_HOME does not exist as a valid directory : $WILDFLY_HOME
  exit 1
fi

procrunning () {
   procid=0
   for procid in `pidof -x $WILDFLY_HOME/bin/standalone.sh`; do
       ps -fp $procid | grep "${WILDFLYSH% *}" > /dev/null && pid=$procid
   done
}

stop () {
    pid=0
    procrunning
    if [ $pid = '0' ]; then
        /bin/echo -n -e "\nNo JBossas is currently running\n"
        exit 1
    fi

    RETVAL=1

    # If process is still running
    
    # Try to use client to shutdown
    if [ -z "$SUBIT" ]; then
        $WILDFLYSTOP
    else
        $SUBIT "$WILDFLYSTOP"
    fi

    sleep 5

    # Second, try to kill it nicely
    for id in `ps --ppid $pid | awk '{print $1}' | grep -v "^PID$"`; do
       if [ -z "$SUBIT" ]; then
           kill -15 $id
       else
           $SUBIT "kill -15 $id"
       fi
    done

    sleep=0
    while [ $sleep -lt 120 -a $RETVAL -eq 1 ]; do
        /bin/echo -n -e "\nwaiting for JBoss processes to stop";
        sleep 10
        sleep=`expr $sleep + 10`
        pid=0
        procrunning
        if [ $pid = '0' ]; then
            RETVAL=0
        fi
    done

    count=0
    pid=0
    procrunning

    if [ $RETVAL != 0 ] ; then
        /bin/echo -e "\nTimeout: Shutdown command was sent, but process is still running with PID $pid"
        exit 1
    fi

    echo
    exit 0
}

case "$1" in
start)
    cd $WILDFLY_HOME/bin
    if [ -z "$SUBIT" ]; then
        eval $WILDFLY_CMD_START >${WILDFLY_CONSOLE} 2>&1 &
    else
        $SUBIT "$WILDFLY_CMD_START >${WILDFLY_CONSOLE} 2>&1 &" 
    fi
    ;;
stop)
    stop
    ;;
restart)
    $0 stop
    $0 start
    ;;
*)
    echo "usage: $0 (start|stop|restart|help)"
esac

